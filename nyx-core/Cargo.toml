[package]
name = "nyx-core"
version = "0.1.0"
edition = "2021"

description = "Nyx Core utilities, types, configuration, and error handling."
license = "MIT OR Apache-2.0"

[lints]
workspace = true

[dependencies]
serde = { workspace = true }
serde_json = { workspace = true }
toml = "0.7"
thiserror = { workspace = true }
tracing = { workspace = true }
tokio = { workspace = true, features = ["sync", "time", "macros", "rt", "rt-multi-thread", "net", "io-util"] }
notify = { version = "6.1" }
fluent-bundle = { version = "0.15" }
unic-langid = "0.9"
once_cell = "1.19"
ciborium = "0.2"
tokio-stream = { version = "0.1", features=["sync"] }
async-trait = "0.1"
anyhow = { workspace = true }
uuid = { workspace = true }
futures = { workspace = true }
rand = { workspace = true }
chrono = { workspace = true }
sha2 = { workspace = true }
serde_bytes = "0.11"
num_cpus = "1.16"
socket2 = "0.5"
# Needed for push module and concurrent maps
dashmap = "5.5"
# Removed libc dependency for pure Rust implementation
# All system calls now use pure Rust alternatives

# Optional telemetry integration
nyx-telemetry = { path = "../nyx-telemetry", optional = true }

# Optional crypto integration
nyx-crypto = { path = "../nyx-crypto", optional = true }

# Optional FEC integration for zero-copy helpers
nyx-fec = { path = "../nyx-fec", optional = true }

# Optional FEC integration (removed due to circular dependency)
# nyx-fec integration is handled through traits and feature gates

# Optional push notification dependencies (removed to keep build TLS/C-free)
# fcm = { version = "0.9", optional = true }
# a2 = { version = "0.10", optional = true }

# Optional big integer and num traits for cmix integration
num-bigint = { package = "num-bigint", version = "0.4", optional = true }
num-traits = { package = "num-traits", version = "0.2", optional = true }

# Optional CBOR alt crate for plugin framework (enable serde support)
cbor4ii = { version = "1.1", optional = true, features = ["serde1"] }

[features]
default = []
# Enable OS-level sandbox enforcement (platform-dependent). Off by default.
os_sandbox = []
# Enable automatic error metric recording.
telemetry = ["nyx-telemetry"]
# Enable mobile platform integration
mobile = ["nyx-crypto"]
# Enable mobile FFI based low power triggers (polling bridge to nyx-mobile-ffi)
mobile_ffi = ["nyx-mobile-ffi"]
# Push notification feature flags kept for API gating, but without pulling TLS deps
push = []
# Optional modules (off by default to avoid build breakage)
plugin_framework = ["cbor4ii"]
multipath_dp = []
cmix = ["num-bigint", "num-traits"]
# Enable zero-copy integration with crypto components (fec handled separately)
zero_copy = ["nyx-crypto"]
# Enable FEC helpers (e.g., 1280B shard views)
fec = ["dep:nyx-fec"]
# Alias feature to enable optional dependency `nyx-crypto`
nyx-crypto = ["dep:nyx-crypto"]

# Additional features for compliance system
multipath = []
hybrid = []
vdf = []
plugin = ["plugin_framework"]
quic = []
nat_traversal = []
otlp = ["telemetry"]

[dependencies.nyx-mobile-ffi]
path = "../nyx-mobile-ffi"
optional = true

[target.'cfg(target_os = "linux")'.dependencies]
# Pure Rust implementation without C dependencies
# Removed nix dependency - all functionality now uses pure Rust alternatives

[target.'cfg(target_os = "openbsd")'.dependencies]
# Removed pledge and unveil dependencies for pure Rust implementation
# All sandbox functionality now uses environment variable-based restrictions

[target.'cfg(windows)'.dependencies]
# Removed windows and win32job dependencies for pure Rust implementation
# All sandbox functionality now uses environment variable-based restrictions

[target.'cfg(target_os = "macos")'.dependencies]
# Pure Rust implementation without C dependencies
# Removed nix dependency - all functionality now uses pure Rust alternatives

[dev-dependencies]
hex-literal = "0.4"
tempfile = "3.8"
tokio-test = "0.4"
criterion = { version = "0.5", features = ["html_reports", "async_tokio"] }
futures = "0.3"
nyx-crypto = { path = "../nyx-crypto" }
nyx-fec = { path = "../nyx-fec" }
nyx-transport = { path = "../nyx-transport" }
nyx-stream = { path = "../nyx-stream" }
bytes = "1.5"

[[bench]]
name = "security_scalability_benchmark"
harness = false

[[bench]]
name = "push_gateway_enhanced"
harness = false
